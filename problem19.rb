# 次の情報が与えられている.

# 1900年1月1日は月曜日である.
# 9月, 4月, 6月, 11月は30日まであり, 2月を除く他の月は31日まである.
# 2月は28日まであるが, うるう年のときは29日である.
# うるう年は西暦が4で割り切れる年に起こる. しかし, 西暦が400で割り切れず100で割り切れる年はうるう年でない.
# 20世紀（1901年1月1日から2000年12月31日）中に月の初めが日曜日になるのは何回あるか?

# 12 * 100 max 1200個、この中で判定をできればいい


# first_day = Date.new(1990,1,1)
# second_day = Date.new(1990,2,1)

# p %w(日 月 火 水 木 金 土)[first_day.wday]
# p %w(日 月 火 水 木 金 土)[second_day.wday] 
# 31日経過すると曜日は3進む
# つまり、%7のあまりだけ進む
# 経過日%7が進む曜日の数

# 閏年じゃない限り

# 1-2 31 2-3 28
# 31,28,31,30,31,30,31,31,30,31,30,31の繰り返し

require "date"
start = Date.new(1901, 1, 1)
goal = Date.new(2000, 12, 31)

sum = 0
start.upto(goal) do |day|
  sum = sum + 1 if day.day == 1 and day.sunday?
end

puts sum == 171
